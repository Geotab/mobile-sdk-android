apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'

apply from: "$project.rootDir/kotlin-lint.gradle"

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.1.2795"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'VERSION_NAME', "\"${versionName}\""
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    lintOptions {
        lintConfig file("lint.xml")
        warningsAsErrors true
        abortOnError true
        ignore "GradleDependency", "ObsoleteLintCustomCheck"
    }

    dokka {
        outputFormat = 'html'
        outputDirectory = "$buildDir/docs"

        configuration {
            noJdkLink = true
            noStdlibLink = true
            noAndroidSdkLink = true
            includeNonPublic = false

            perPackageOption {
                prefix = "com.geotab.mobile.sdk.publicInterfaces"
                moduleName = 'output'
                suppress = false
            }

            perPackageOption {
                prefix = "com.geotab.mobile.sdk.models.publicModels"
                moduleName = 'output'
                suppress = false
            }

            perPackageOption {
                prefix = "com"
                moduleName = ''
                suppress = true
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.constraintlayout:constraintlayout:2.0.3'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.exifinterface:exifinterface:1.3.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.7'
    implementation 'com.github.spullara.mustache.java:compiler:0.8.18'
    implementation 'androidx.fragment:fragment-ktx:1.3.0-alpha08'
    implementation 'com.google.android.gms:play-services-location:17.1.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.jetbrains.kotlin:kotlin-test:1.3.50'
    testImplementation 'io.mockk:mockk:1.9.3'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.7'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.0'
    androidTestImplementation 'androidx.test:core:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    debugImplementation 'androidx.fragment:fragment-testing:1.2.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}
repositories {
    mavenCentral()
    google()
}

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.10.1"
    }
}

publishing {

    repositories {

        Properties properties = new Properties()
        File localProperties = project.file("local.properties")
        if (localProperties.exists()) {
            properties.load(localProperties.newDataInputStream())
        }


        maven {
            name = "GitHubPackages"
            url = uri {"https://maven.pkg.github.com/geotab/mobile-sdk-android"}
            credentials {
                username = properties.getProperty("gpr.user") ?: System.getenv("GPR_USER")
                password = properties.getProperty("gpr.key") ?: System.getenv("GPR_TOKEN")
            }

        }
    }

    publications {
        aar(MavenPublication) {
            groupId 'com.geotab.mobile.sdk'
            artifactId 'mobile-sdk-android'
            version android.defaultConfig.versionName

            artifact "$buildDir/outputs/aar/geotabdrivesdk-release.aar"

            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.getByName("releaseCompileClasspath").allDependencies
                        .findAll { it instanceof ExternalDependency }
                        .each {
                            def dependency = dependencies.appendNode('dependency')
                            dependency.appendNode('groupId', it.group)
                            dependency.appendNode('artifactId', it.name)
                            dependency.appendNode('version', it.version)
                        }

            }
        }
    }
}

task copyTestFiles(type: Copy) {
    from "src/main/assets"
    into "src/test/resources"
}

afterEvaluate {
    javaPreCompileDebugUnitTest.dependsOn(copyTestFiles)
}

tasks.all { task ->
    if (task instanceof AbstractPublishToMaven) {
        task.dependsOn assemble
    }
}
